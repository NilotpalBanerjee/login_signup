{"ast":null,"code":"function Validation(values){let error={};const email_pattern=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;// Fixed the space issue in the email regex\nconst password_pattern=/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;// Fixed the space issue in the password regex\n// Email validation\nif(values.email===\"\"){error.email=\"Email should not be empty\";}else if(!email_pattern.test(values.email)){error.email=\"Email didn't match the required pattern\";}else{error.email=\"\";}// Password validation\nif(values.password===\"\"){error.password=\"Password should not be empty\";}else if(!password_pattern.test(values.password)){error.password=\"Password should contain at least one number, one lowercase letter, one uppercase letter, and be at least 8 characters long\";}else{error.password=\"\";}return error;}export default Validation;","map":{"version":3,"names":["Validation","values","error","email_pattern","password_pattern","email","test","password"],"sources":["C:/Development/login/frontend/src/loginValidation.js"],"sourcesContent":["function Validation(values) {\r\n    let error = {};\r\n\r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Fixed the space issue in the email regex\r\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/; // Fixed the space issue in the password regex\r\n\r\n    // Email validation\r\n    if (values.email === \"\") {\r\n        error.email = \"Email should not be empty\";\r\n    } else if (!email_pattern.test(values.email)) {\r\n        error.email = \"Email didn't match the required pattern\";\r\n    } else {\r\n        error.email = \"\";\r\n    }\r\n\r\n    // Password validation\r\n    if (values.password === \"\") {\r\n        error.password = \"Password should not be empty\";\r\n    } else if (!password_pattern.test(values.password)) {\r\n        error.password = \"Password should contain at least one number, one lowercase letter, one uppercase letter, and be at least 8 characters long\";\r\n    } else {\r\n        error.password = \"\";\r\n    }\r\n\r\n    return error;\r\n}\r\n\r\nexport default Validation;\r\n"],"mappings":"AAAA,QAAS,CAAAA,UAAUA,CAACC,MAAM,CAAE,CACxB,GAAI,CAAAC,KAAK,CAAG,CAAC,CAAC,CAEd,KAAM,CAAAC,aAAa,CAAG,4BAA4B,CAAE;AACpD,KAAM,CAAAC,gBAAgB,CAAG,iDAAiD,CAAE;AAE5E;AACA,GAAIH,MAAM,CAACI,KAAK,GAAK,EAAE,CAAE,CACrBH,KAAK,CAACG,KAAK,CAAG,2BAA2B,CAC7C,CAAC,IAAM,IAAI,CAACF,aAAa,CAACG,IAAI,CAACL,MAAM,CAACI,KAAK,CAAC,CAAE,CAC1CH,KAAK,CAACG,KAAK,CAAG,yCAAyC,CAC3D,CAAC,IAAM,CACHH,KAAK,CAACG,KAAK,CAAG,EAAE,CACpB,CAEA;AACA,GAAIJ,MAAM,CAACM,QAAQ,GAAK,EAAE,CAAE,CACxBL,KAAK,CAACK,QAAQ,CAAG,8BAA8B,CACnD,CAAC,IAAM,IAAI,CAACH,gBAAgB,CAACE,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAE,CAChDL,KAAK,CAACK,QAAQ,CAAG,4HAA4H,CACjJ,CAAC,IAAM,CACHL,KAAK,CAACK,QAAQ,CAAG,EAAE,CACvB,CAEA,MAAO,CAAAL,KAAK,CAChB,CAEA,cAAe,CAAAF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}