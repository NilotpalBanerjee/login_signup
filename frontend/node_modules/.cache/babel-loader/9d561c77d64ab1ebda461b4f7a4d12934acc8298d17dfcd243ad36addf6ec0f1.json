{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Fixed the space issue in the email regex\n  const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/; // Fixed the space issue in the password regex\n  const mobile_pattern = /^[6-9]\\d{9}$/;\n\n  // Email validation\n  if (values.email === \"\") {\n    error.email = \"Email should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Email didn't match the required pattern\";\n  } else {\n    error.email = \"\";\n  }\n  // mobile validation\n  if (values.mobile_no === \"\") {\n    error.mobile_no = \"Mobile number should not be empty\";\n  } else if (!mobile_pattern.test(values.mobile_no)) {\n    error.mobile_no = \"Invalid mobile number\";\n  } else {\n    error.mobile_no = \"\";\n  }\n  // Password validation\n  if (values.password === \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"Password should contain at least one number, one lowercase letter, one uppercase letter, and be at least 8 characters long\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","password_pattern","mobile_pattern","email","test","mobile_no","password","_c","$RefreshReg$"],"sources":["C:/Development/login/frontend/src/loginValidation.js"],"sourcesContent":["function Validation(values) {\r\n    let error = {};\r\n\r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Fixed the space issue in the email regex\r\n    const password_pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[a-zA-Z0-9]{8,}$/; // Fixed the space issue in the password regex\r\n    const mobile_pattern = /^[6-9]\\d{9}$/;\r\n\r\n    // Email validation\r\n    if (values.email === \"\") {\r\n        error.email = \"Email should not be empty\";\r\n    } else if (!email_pattern.test(values.email)) {\r\n        error.email = \"Email didn't match the required pattern\";\r\n    } else {\r\n        error.email = \"\";\r\n    }\r\n    // mobile validation\r\n    if(values.mobile_no === \"\") {  \r\n        error.mobile_no = \"Mobile number should not be empty\";\r\n    } else if(!mobile_pattern.test(values.mobile_no)){\r\n        error.mobile_no = \"Invalid mobile number\";\r\n    }else{\r\n        error.mobile_no = \"\";\r\n    }\r\n    // Password validation\r\n    if (values.password === \"\") {\r\n        error.password = \"Password should not be empty\";\r\n    } else if (!password_pattern.test(values.password)) {\r\n        error.password = \"Password should contain at least one number, one lowercase letter, one uppercase letter, and be at least 8 characters long\";\r\n    } else {\r\n        error.password = \"\";\r\n    }\r\n\r\n    return error;\r\n}\r\n\r\nexport default Validation;\r\n"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAE;EACxB,IAAIC,KAAK,GAAG,CAAC,CAAC;EAEd,MAAMC,aAAa,GAAG,4BAA4B,CAAC,CAAC;EACpD,MAAMC,gBAAgB,GAAG,iDAAiD,CAAC,CAAC;EAC5E,MAAMC,cAAc,GAAG,cAAc;;EAErC;EACA,IAAIJ,MAAM,CAACK,KAAK,KAAK,EAAE,EAAE;IACrBJ,KAAK,CAACI,KAAK,GAAG,2BAA2B;EAC7C,CAAC,MAAM,IAAI,CAACH,aAAa,CAACI,IAAI,CAACN,MAAM,CAACK,KAAK,CAAC,EAAE;IAC1CJ,KAAK,CAACI,KAAK,GAAG,yCAAyC;EAC3D,CAAC,MAAM;IACHJ,KAAK,CAACI,KAAK,GAAG,EAAE;EACpB;EACA;EACA,IAAGL,MAAM,CAACO,SAAS,KAAK,EAAE,EAAE;IACxBN,KAAK,CAACM,SAAS,GAAG,mCAAmC;EACzD,CAAC,MAAM,IAAG,CAACH,cAAc,CAACE,IAAI,CAACN,MAAM,CAACO,SAAS,CAAC,EAAC;IAC7CN,KAAK,CAACM,SAAS,GAAG,uBAAuB;EAC7C,CAAC,MAAI;IACDN,KAAK,CAACM,SAAS,GAAG,EAAE;EACxB;EACA;EACA,IAAIP,MAAM,CAACQ,QAAQ,KAAK,EAAE,EAAE;IACxBP,KAAK,CAACO,QAAQ,GAAG,8BAA8B;EACnD,CAAC,MAAM,IAAI,CAACL,gBAAgB,CAACG,IAAI,CAACN,MAAM,CAACQ,QAAQ,CAAC,EAAE;IAChDP,KAAK,CAACO,QAAQ,GAAG,4HAA4H;EACjJ,CAAC,MAAM;IACHP,KAAK,CAACO,QAAQ,GAAG,EAAE;EACvB;EAEA,OAAOP,KAAK;AAChB;AAACQ,EAAA,GAjCQV,UAAU;AAmCnB,eAAeA,UAAU;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}